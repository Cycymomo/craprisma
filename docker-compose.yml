version: '3'
services:
  mysql:
    container_name: mysql
    ports:
      - '${MYSQL_ROOT_PORT}:${MYSQL_ROOT_PORT}'
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: prisma
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
  prisma:
    container_name: prisma
    links:
      - mysql
    depends_on:
      - mysql
    env_file: .env
    image: prismagraphql/prisma:1.34
    restart: always
    ports:
      - '${PRISMA_PORT}:${PRISMA_PORT}'
    environment:
      MYSQL_URL: ${MYSQL_URL}
      PRISMA_CONFIG: |
        managementApiSecret: ${PRISMA_MANAGEMENT_API_SECRET}
        port: ${PRISMA_PORT}
        databases:
          default:
            connector: mysql
            host: mysql
            port: ${MYSQL_ROOT_PORT}
            user: ${MYSQL_ROOT_USER}
            password: ${MYSQL_ROOT_PASSWORD}
  server:
    container_name: server
    links:
      - mysql
    depends_on:
      - mysql
      - prisma
    env_file: .env
    ports:
      - '4000:4000'
    command: npm start
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        MYSQL_URL: ${MYSQL_URL}
        CLIENT_URL: ${CLIENT_URL}
    volumes:
      - './server:/usr/src/server'
      - '/usr/src/server/node_modules'
    environment:
      NODE_ENV: development
      MYSQL_URL: ${MYSQL_URL}
      CLIENT_URL: ${CLIENT_URL}
  client:
    container_name: client
    ports:
      - '3000:3000'
      - '35729:35729'
    command: npm start
    build: ./client
    volumes:
      - './client:/usr/src/client'
      - '/usr/src/client/node_modules'
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
volumes:
  mysql: ~
